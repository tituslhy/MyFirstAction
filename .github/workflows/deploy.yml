name: Deployment
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache and Install Dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: "true"
      - name: Output information
        run: echo "Cache setting - ${{ steps.cache-deps.outputs.used-cache}}"
      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black
      - name: Lint Code
        run: black .
      - name: Upload linted code as artifact
        uses: actions/upload-artifact@v4
        with:
          name: linted-code
          path: .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Cache and Install Dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: "true"
      - name: Output information
        run: echo "Cache setting - ${{ steps.cache-deps.outputs.used-cache}}"
      - name: Run Tests
        run: |
          pytest tests --cov=tests --cov-report=xml:coverage.xml --cov-report=html:coverage-report.html
      - name: List files for debugging
        run: |
          ls -la
          ls -la tests
          ls -la coverage-report.html
          ls -la coverage.xml
      - name: Upload Test Results as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            tests/test_results.xml
            coverage.xml
      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report.html # Assuming you generate the HTML coverage report

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Download linted code artifact
        uses: actions/download-artifact@v4
        with:
          name: linted-code
      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/myfirstaction
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
